{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/ethereum/kickstart/components/ContributeForm.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport { campaignCreate } from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nexport const ContributeForm = ({\n  address\n}) => {\n  const {\n    0: formState,\n    1: formChangeState\n  } = useState({\n    value: ''\n  });\n\n  const onContribute = async e => {\n    e.preventDefault();\n    const campaign = campaignCreate(address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribute().send({\n        from: accounts[0],\n        value: web3.utils.toWei(formState.value, 'ether')\n      });\n    } catch (e) {}\n  };\n\n  return __jsx(Form, {\n    onSubmit: () => onContribute(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Amount to Contribute\"), __jsx(Input, {\n    value: formState.value,\n    onChange: e => formChangeState(_objectSpread({}, formState, {\n      value: e.target.value\n    })),\n    label: \"ether\",\n    labelPosition: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Contribute!\"));\n};","map":{"version":3,"sources":["/Users/macbook/ethereum/kickstart/components/ContributeForm.js"],"names":["React","useState","Form","Input","Message","Button","campaignCreate","web3","ContributeForm","address","formState","formChangeState","value","onContribute","e","preventDefault","campaign","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","target"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,OAArB,EAA8BC,MAA9B,QAA2C,mBAA3C;AACA,SAAQC,cAAR,QAA6B,sBAA7B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAEzC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA+BV,QAAQ,CAAC;AAC1CW,IAAAA,KAAK,EAAE;AADmC,GAAD,CAA7C;;AAIA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,QAAQ,GAAGV,cAAc,CAACG,OAAD,CAA/B;;AAEA,QAAI;AACA,YAAMQ,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAvB;AAEA,YAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,QAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADuB;AAErCL,QAAAA,KAAK,EAAEL,IAAI,CAACiB,KAAL,CAAWC,KAAX,CAAiBf,SAAS,CAACE,KAA3B,EAAkC,OAAlC;AAF8B,OAAnC,CAAN;AAIH,KAPD,CAOE,OAAME,CAAN,EAAS,CAEV;AACJ,GAfD;;AAiBA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,MAAMD,YAAY,CAACC,CAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,MAAC,KAAD;AACI,IAAA,KAAK,EAAEJ,SAAS,CAACE,KADrB;AAEI,IAAA,QAAQ,EAAEE,CAAC,IAAIH,eAAe,mBACvBD,SADuB;AAE1BE,MAAAA,KAAK,EAAEE,CAAC,CAACY,MAAF,CAASd;AAFU,OAFlC;AAMI,IAAA,KAAK,EAAC,OANV;AAOI,IAAA,aAAa,EAAC,OAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAaI,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAbJ,CADJ;AAmBH,CA1CM","sourcesContent":["import React, {useState} from 'react';\nimport {Form, Input, Message, Button} from 'semantic-ui-react';\nimport {campaignCreate} from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nexport const ContributeForm = ({address}) => {\n\n    const [formState, formChangeState] = useState({\n        value: ''\n    });\n\n    const onContribute = async (e) => {\n        e.preventDefault();\n\n        const campaign = campaignCreate(address);\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            \n            await campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(formState.value, 'ether')\n            })\n        } catch(e) {\n\n        }\n    };\n\n    return(\n        <Form onSubmit={() => onContribute(e)}>\n            <Form.Field>\n                <label>Amount to Contribute</label>\n                <Input \n                    value={formState.value}\n                    onChange={e => formChangeState({\n                        ...formState,\n                        value: e.target.value\n                    })}\n                    label=\"ether\"\n                    labelPosition=\"right\"\n                />\n            </Form.Field>\n            <Button primary>\n                Contribute!\n            </Button>\n        </Form>\n    )\n};"]},"metadata":{},"sourceType":"module"}