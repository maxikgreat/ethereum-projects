{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/macbook/ethereum/kickstart/components/ContributeForm.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport { campaignCreate } from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nexport var ContributeForm = function ContributeForm(_ref) {\n  var address = _ref.address;\n\n  var _useState = useState({\n    value: ''\n  }),\n      formState = _useState[0],\n      formChangeState = _useState[1];\n\n  var onContribute = function onContribute(e) {\n    var campaign, accounts;\n    return _regeneratorRuntime.async(function onContribute$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            campaign = campaignCreate(address);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n          case 5:\n            accounts = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(campaign.methods.contribute().send({\n              from: accounts[0],\n              value: web3.utils.toWei(formState.value, 'ether')\n            }));\n\n          case 8:\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]], Promise);\n  };\n\n  return __jsx(Form, {\n    onSubmit: function onSubmit(e) {\n      return onContribute(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Field, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Amount to Contribute\"), __jsx(Input, {\n    value: formState.value,\n    onChange: function onChange(e) {\n      return formChangeState(_objectSpread({}, formState, {\n        value: e.target.value\n      }));\n    },\n    label: \"ether\",\n    labelPosition: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    primary: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Contribute!\"));\n};","map":{"version":3,"sources":["/Users/macbook/ethereum/kickstart/components/ContributeForm.js"],"names":["React","useState","Form","Input","Message","Button","campaignCreate","web3","ContributeForm","address","value","formState","formChangeState","onContribute","e","preventDefault","campaign","eth","getAccounts","accounts","methods","contribute","send","from","utils","toWei","target"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,OAArB,EAA8BC,MAA9B,QAA2C,mBAA3C;AACA,SAAQC,cAAR,QAA6B,sBAA7B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAe;AAAA,MAAbC,OAAa,QAAbA,OAAa;;AAAA,kBAEJR,QAAQ,CAAC;AAC1CS,IAAAA,KAAK,EAAE;AADmC,GAAD,CAFJ;AAAA,MAElCC,SAFkC;AAAA,MAEvBC,eAFuB;;AAMzC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBA,YAAAA,CAAC,CAACC,cAAF;AAEMC,YAAAA,QAHW,GAGAV,cAAc,CAACG,OAAD,CAHd;AAAA;AAAA;AAAA,6CAMUF,IAAI,CAACU,GAAL,CAASC,WAAT,EANV;;AAAA;AAMPC,YAAAA,QANO;AAAA;AAAA,6CAQPH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,cAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD,CADuB;AAErCT,cAAAA,KAAK,EAAEH,IAAI,CAACiB,KAAL,CAAWC,KAAX,CAAiBd,SAAS,CAACD,KAA3B,EAAkC,OAAlC;AAF8B,aAAnC,CARO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAiBA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,kBAACI,CAAD;AAAA,aAAOD,YAAY,CAACC,CAAD,CAAnB;AAAA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,MAAC,KAAD;AACI,IAAA,KAAK,EAAEH,SAAS,CAACD,KADrB;AAEI,IAAA,QAAQ,EAAE,kBAAAI,CAAC;AAAA,aAAIF,eAAe,mBACvBD,SADuB;AAE1BD,QAAAA,KAAK,EAAEI,CAAC,CAACY,MAAF,CAAShB;AAFU,SAAnB;AAAA,KAFf;AAMI,IAAA,KAAK,EAAC,OANV;AAOI,IAAA,aAAa,EAAC,OAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAaI,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAbJ,CADJ;AAmBH,CA1CM","sourcesContent":["import React, {useState} from 'react';\nimport {Form, Input, Message, Button} from 'semantic-ui-react';\nimport {campaignCreate} from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nexport const ContributeForm = ({address}) => {\n\n    const [formState, formChangeState] = useState({\n        value: ''\n    });\n\n    const onContribute = async (e) => {\n        e.preventDefault();\n\n        const campaign = campaignCreate(address);\n\n        try {\n            const accounts = await web3.eth.getAccounts();\n            \n            await campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(formState.value, 'ether')\n            })\n        } catch(e) {\n\n        }\n    };\n\n    return(\n        <Form onSubmit={(e) => onContribute(e)}>\n            <Form.Field>\n                <label>Amount to Contribute</label>\n                <Input \n                    value={formState.value}\n                    onChange={e => formChangeState({\n                        ...formState,\n                        value: e.target.value\n                    })}\n                    label=\"ether\"\n                    labelPosition=\"right\"\n                />\n            </Form.Field>\n            <Button primary>\n                Contribute!\n            </Button>\n        </Form>\n    )\n};"]},"metadata":{},"sourceType":"module"}