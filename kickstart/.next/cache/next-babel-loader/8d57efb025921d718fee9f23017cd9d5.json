{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/ethereum/kickstart/pages/campaigns/[campaign_id].js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { campaignCreate } from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport { withRouter } from 'next/router';\nimport { Layout } from '../../components/Layout';\nimport ContributeForm from '../../components/ContributeForm';\nimport Link from 'next/link';\nexport async function getServerSideProps(content) {\n  const {\n    campaign_id\n  } = content.query;\n  const campaign = campaignCreate(campaign_id); // address\n\n  const summary = await campaign.methods.getSummary().call();\n  return {\n    props: {\n      address: campaign_id,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    }\n  };\n}\n\nclass CampaignShow extends Component {\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestsCount,\n      approversCount,\n      manager\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Address of manager',\n      description: 'The manager created this campaign and can create requests to withdraw money',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: minimumContribution,\n      meta: 'Minimum Contribution (wei)',\n      description: 'You must contribute at least this much wei to become an approver'\n    }, {\n      header: requestsCount,\n      meta: 'Number of Requests',\n      description: 'A request tries to withdraw money from the contract. Request must be approved by approvers'\n    }, {\n      header: approversCount,\n      meta: 'Number of Approvers',\n      description: 'Number of people you have already donated to this Campaign'\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Campaign Balance (ether)',\n      description: 'The balance is how much money this campaign has left to spend'\n    }];\n    return __jsx(Card.Group, {\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      className: \"ui header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Campaign details\"), __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, __jsx(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, this.renderCards(), __jsx(Link, {\n      href: \"/campaigns/[campaign_id]/requests\",\n      as: `/campaigns/${this.props.address}/requests`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }))), __jsx(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, __jsx(ContributeForm, {\n      address: this.props.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\n;\nexport default withRouter(CampaignShow);","map":{"version":3,"sources":["/Users/macbook/ethereum/kickstart/pages/campaigns/[campaign_id].js"],"names":["React","Component","campaignCreate","web3","Card","Grid","Button","withRouter","Layout","ContributeForm","Link","getServerSideProps","content","campaign_id","query","campaign","summary","methods","getSummary","call","props","address","minimumContribution","balance","requestsCount","approversCount","manager","CampaignShow","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {campaignCreate} from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport {Card, Grid, Button} from 'semantic-ui-react';\nimport {withRouter} from 'next/router';\nimport {Layout} from '../../components/Layout';\nimport ContributeForm from '../../components/ContributeForm';\nimport Link from 'next/link';\n\nexport async function getServerSideProps(content) {\n    const {campaign_id} = content.query;\n    const campaign = campaignCreate(campaign_id); // address\n    \n    const summary = await campaign.methods.getSummary().call();\n\n    return {props: {\n        address: campaign_id,\n        minimumContribution: summary[0],\n        balance: summary[1],\n        requestsCount: summary[2],\n        approversCount: summary[3],\n        manager: summary[4]\n    }}\n}\n\nclass CampaignShow extends Component {\n    renderCards() {\n        const {\n            minimumContribution, \n            balance,\n            requestsCount,\n            approversCount,\n            manager\n        } = this.props;\n\n        const items = [\n            {\n                header: manager,\n                meta: 'Address of manager',\n                description: 'The manager created this campaign and can create requests to withdraw money',\n                style: {overflowWrap: 'break-word'}\n            },\n            {\n                header: minimumContribution,\n                meta: 'Minimum Contribution (wei)',\n                description: 'You must contribute at least this much wei to become an approver'\n            },\n            {\n                header: requestsCount,\n                meta: 'Number of Requests',\n                description: 'A request tries to withdraw money from the contract. Request must be approved by approvers'\n            },\n            {\n                header: approversCount,\n                meta: 'Number of Approvers',\n                description: 'Number of people you have already donated to this Campaign'\n            },\n            {\n                header: web3.utils.fromWei(balance, 'ether'),\n                meta: 'Campaign Balance (ether)',\n                description: 'The balance is how much money this campaign has left to spend'\n            }\n        ]\n\n        return <Card.Group items={items} />\n    }\n\n    render(){\n        return(\n            <Layout>\n                <h2 className=\"ui header\">Campaign details</h2>\n                <Grid>\n                    <Grid.Column width={10}>\n                        {this.renderCards()}\n                        <Link \n                            href=\"/campaigns/[campaign_id]/requests\" \n                            as={`/campaigns/${this.props.address}/requests`}\n                        >\n                            <a></a>\n                        </Link>\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        <ContributeForm \n                            address={this.props.address}\n                        />\n                    </Grid.Column>\n                </Grid>\n            </Layout>   \n        )\n    }\n};\n\nexport default withRouter(CampaignShow);"]},"metadata":{},"sourceType":"module"}